<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_CrazedAgent</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Shootables</parentName>
  <maskName>spr_Convict</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vsp = 0;
grv = 0.3;
walksp = 0;
hsp = walksp;

hitfrom = 0;
size = 1;
hp = 5;
flash = 0;

grounded = false;
afraidofheights = true;

mygun = instance_create(x, y, obj_EnemyGun);
with (mygun)
    {
    owner = other.id
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hp &lt;= 0)
    {
    with(instance_create(x, y, obj_SCrazedAgentOut))
        {
        direction = other.hitfrom;
        hsp = lengthdir_x(random_range(3, 4), direction);
        vsp = lengthdir_y(random_range(3, 5), direction) - 2;
        if (sign(hsp) !=0) image_xscale = sign(hsp) * other.size;
        image_yscale = other.size;
        }
    
    with (mygun) instance_destroy();
    instance_destroy();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vsp = vsp + grv;

grounded = true; // Very hacky fix, for it complains that I haven't set it eventhough I set it on create

// Don't walk off the edges
if (grounded == true) &amp;&amp; (!place_meeting(x + (sprite_width / 2), y + 1, obj_IndustrialWall))
    {
    hsp = -hsp;
    }

// Horizontal collision
if (place_meeting(x + hsp, y, obj_IndustrialWall))
    {
    while (!place_meeting(x + sign(hsp), y, obj_IndustrialWall))
        {
        x = x + sign(hsp);
        }
    hsp = -hsp;
    }

x = x + hsp;

// Vertical collision
if (place_meeting(x, y + vsp, obj_IndustrialWall))
    {
    while (!place_meeting(x, y + sign(vsp), obj_IndustrialWall))
        {
        y = y + sign(vsp);
        }
    vsp = 0;
    }

y = y + vsp;

// Animations
if (!place_meeting(x, y + 1, obj_IndustrialWall))
    {
    grounded = false;
    sprite_index = spr_CrazedAgentJump;
    image_speed = 0;
    if (sign(vsp) &gt; 0) image_index = 1; else image_index = 0;
    }
else
    {
    grounded = true;
    image_speed = 1;
    if (hsp == 0)
        {
        sprite_index = spr_CrazedAgent;
        }
    else
        {
        sprite_index = spr_CrazedAgentRun;
        }
    }
    
if (hsp != 0) image_xscale = sign(hsp) * size;
image_yscale = size;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
