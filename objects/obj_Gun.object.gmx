<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Gun</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>firingdelay = 0;
recoil = 0;
controllerangle = 0;
if (global.hasgun == false) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Weapon position
x = obj_Player.x;
y = obj_Player.y + 5;

// Weapon direction
if (obj_Player.controller == 0)
    {
    image_angle = point_direction(x, y, mouse_x, mouse_y);
    }
else
    {
    obj_Player.controller = 1;
    var controllerh = gamepad_axis_value(0, gp_axisrh);
    var controllerv = gamepad_axis_value(0, gp_axisrv);
    if (abs(controllerh) &gt; 0.2) || (abs(controllerv) &gt; 0.2)
        {
        controllerangle = point_direction(0, 0, controllerh, controllerv)
        }
        image_angle = controllerangle;
    }


firingdelay = firingdelay - 1;
recoil = max(0, recoil - 1);

if (mouse_check_button(mb_left)) ^^ gamepad_button_check(0, gp_shoulderrb) &amp;&amp; (firingdelay &lt; 0)
    {
    recoil = 4;
    firingdelay = 10;
    audio_sound_pitch(snd_Shot, random_range(0.9, 1.1));
    audio_play_sound(snd_Shot, 5, false);
    with (instance_create(x, y, obj_Bullet))
        {
        speed = 15;
        direction = other.image_angle + random_range(-3, 3);
        image_angle = direction;
        }
    with (obj_Player)
        {
        gunkickx = lengthdir_x(2.5, other.image_angle - 180);
        gunkicky = lengthdir_y(1.25, other.image_angle - 180);
        }
    }
    
x = x - lengthdir_x(recoil, image_angle);
y = y - lengthdir_y(recoil, image_angle);

if (image_angle &gt; 90) &amp;&amp; (image_angle &lt; 270)
    {
    image_yscale = -1;
    }
else
    {
    image_yscale = 1;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
